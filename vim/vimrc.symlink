call pathogen#infect()
call pathogen#helptags()
filetype plugin indent on

set autoindent
set tabstop=4
set shiftwidth=4

set title
set laststatus=2
set ruler

set number
set ch=1
set ignorecase
set nostartofline
set showmatch
set mat=5

set statusline=%<\ %n:%f\ %m%r%y%=%-35.(line:\ %l\ of\ %L,\ col:\ %c%V\ (%P)%)
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"let g:syntastic_enable_signs=1
"let g:syntastic_enable_balloons = 1
"let g:syntastic_auto_jump = 1
"let g:syntastic_auto_loc_list = 1

autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

colorscheme default
syntax on
set filetype=on
set backspace=indent,eol,start
set ruler
au BufNewFile,BufRead *.py set tabstop=4
au BufNewFile,BufRead *.py set shiftwidth=4
au BufNewFile,BufRead *.py set autoindent
au BufNewFile,BufRead *.py set expandtab
au BufNewFile,BufRead *.py set smarttab
au BufNewFile,BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
au BufNewFile,BufRead *.rb set tabstop=4
au BufNewFile,BufRead *.rb set shiftwidth=4
au BufNewFile,BufRead *.rb set autoindent
au BufNewFile,BufRead *.rb set expandtab
au BufNewFile,BufRead *.rb set smarttab
au BufNewFile,BufRead *.rb set smartindent cinwords=if,elsif,else,unless,for,while,begin,rescue,def,class,module
au BufNewFile,BufRead *.pm set tabstop=4
au BufNewFile,BufRead *.pm set shiftwidth=4
au BufNewFile,BufRead *.pm set autoindent
au BufNewFile,BufRead *.pm set expandtab
au BufNewFile,BufRead *.pl set tabstop=4
au BufNewFile,BufRead *.pl set shiftwidth=4
au BufNewFile,BufRead *.pl set autoindent
au BufNewFile,BufRead *.pm set expandtab

augroup vagrant
    au!
    au BufRead,BufNewFile Vagrantfile set filetype=ruby
augroup END

highlight LineNr term=bold cterm=NONE ctermfg=white ctermbg=black gui=NONE guifg=yellow guibg=NONE



